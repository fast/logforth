# Copyright 2024 FastLabs Developers
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

# Concurrency strategy:
#   github.workflow: distinguish this workflow from others
#   github.event_name: distinguish `push` event from `pull_request` event
#   github.event.number: set to the number of the pull request if `pull_request` event
#   github.run_id: otherwise, it's a `push` event, only cancel if we rerun the workflow
#
# Reference:
#   https://docs.github.com/en/actions/using-jobs/using-concurrency
#   https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event.number || github.run_id }}
  cancel-in-progress: true

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: korandoru/hawkeye@v5
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: typos-cli,taplo-cli
      - name: Check Format
        run: cargo fmt --all
      - name: Check Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Check Toml
        run: taplo format --check
      - name: Check Typos
        run: typos

  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Ensure both MSRV and stable work
        rust-version:
          - "1.75.0"
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Delete rust-toolchain.toml
        run: rm rust-toolchain.toml
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
      - name: Run unit tests
        run: cargo test --all-features -- --nocapture
      - name: Run examples
        run: |
          cargo run --example simple_stdio
          cargo run --example fn_layout_filter
          cargo run --example env_filter
          cargo run --features="no-color" --example simple_stdio
          cargo run --features="json" --example json_stdio
          cargo run --features="json,rolling_file" --example rolling_file

  required:
    name: Required
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - check
      - test
    steps:
      - name: Guardian
        run: |
          if [[ ! ( \
                 "${{ needs.check.result }}" == "success" \
              && "${{ needs.test.result }}" == "success" \
              ) ]]; then
            echo "Required jobs haven't been completed successfully."
            exit -1
          fi
